{"version":3,"sources":["components/Header/index.jsx","components/Event/index.jsx","components/EventContext.js","components/Loading/index.jsx","components/Error/index.jsx","components/Events/index.jsx","components/Highlights/index.jsx","components/Layout/index.jsx","components/NewEvent/index.jsx","components/EventDetails/index.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginTop","spacing","menuButton","marginRight","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Menu","Typography","variant","Button","component","Link","to","maxWidth","marginLeft","media","height","Event","desc","event","Card","CardActionArea","CardMedia","image","eventImage","CardContent","gutterBottom","description","slice","CardActions","TwitterShareButton","url","id","size","EventContext","React","createContext","error","isLoaded","events","setEvents","setError","setIsLoaded","LoadingContainer","styled","div","Loading","CircularProgress","Error","message","control","padding","Events","useContext","Grid","container","item","xs","justify","map","key","EventContainer","EventImage","img","Title","p","ShortDesc","Location","Content","Highlights","useState","highlights","setHighlights","useEffect","fetch","then","res","json","result","console","log","Box","display","sm","src","alt","location","Container","InnerContainer","LayoutBase","flexDirection","alignSelf","left","top","margin","extendedIcon","Layout","Provider","value","Fab","Add","NewEvent","EventDetails","setEvent","useParams","About","Users","App","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2a11a82e.chunk.js","sourcesContent":["import React from \"react\";\nimport {  Link } from \"react-router-dom\";\n\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginTop: theme.spacing(10),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nfunction Header() {\n\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Events\n        </Typography>\n        <Button  color=\"inherit\" component={Link} to=\"/\">Home</Button>\n        <Button  color=\"inherit\" component={Link} to=\"about\">About</Button>\n        <Button  color=\"inherit\" component={Link} to=\"/users\">Users</Button>\n      </Toolbar>\n    </AppBar>\n  </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport {  Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {TwitterShareButton} from \"react-share\";\n\n\nimport './index.css';\n\nEvent.propTypes = {\n  event: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    eventImage: PropTypes.string,\n    description: PropTypes.string,\n    dates: PropTypes.arrayOf(PropTypes.shape),\n    location: PropTypes.string,\n  }),\n};\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    marginTop: 10,\n    marginLeft:20,\n  },\n  media: {\n    height: 150,\n  },\n  \n});\n\nfunction shortDesc(desc)\n{\n  return `${desc.slice(0,100)}...`;\n}\n\nfunction Event({ event }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={event.eventImage}\n          title={event.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {event.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {shortDesc(event.description)}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n\n      <TwitterShareButton url={`https://events-ingenious.com/${event.id} `} title={event.title} >\n             Share\n      </TwitterShareButton>\n\n        <Button size=\"small\" color=\"primary\" component={Link} to={`/event/${event.id}`}>\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default Event;\n","import React from 'react';\n\n\nconst EventContext = React.createContext({\n    error: null,\n    isLoaded: false,\n    events: [],\n    setEvents: () => {},\n    setError: () => {},\n    setIsLoaded: () => {}\n});\n\n\n\nexport default EventContext;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst LoadingContainer = styled.div`\n  display:flex;\n  padding:1rem;\n  align-items:center;\n  justify-content: center;\n  height:100vh;\n  width:100%;\n`;\n\nfunction Loading() {\n  return <LoadingContainer>\n          <CircularProgress />\n         </LoadingContainer>\n}\n\nexport default Loading;","import React from 'react';\n\nfunction Error({error}) {\n  return <div>Error: {error.message}</div>\n}\n\nexport default Error;","import React, {useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Event from \"../Event\";\nimport EventContext from \"../EventContext\";\nimport Loading from \"../Loading\";\nimport Error from \"../Error\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Events() {\n\n  const classes = useStyles();\n  const {error,events,isLoaded} = useContext(EventContext);\n\n  return error ? <Error/> : isLoaded ? (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"flex-start\">\n          {events.map((event) => (\n            <Event event={event} key={event.id} />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  ) : <Loading/>;\n}\n\nexport default Events;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Box from '@material-ui/core/Box';\n\n\nimport Loading from \"../Loading\";\n\nconst EventContainer = styled.div`\n  display: flex;\n  margin-top: 10px;\n  justify-content: space-around;\n  background-color:#FFF;\n  width:100%;\n`;\n\nconst EventImage = styled.img`\n  height: 100px;\n  margin-right: 30px;\n`;\n\nconst Title = styled.p`\n  font-size: 14px;\n`;\n\nconst ShortDesc = styled.p`\n  font-size: 10px;\n`;\n\nconst Location = styled.p`\n  display: flex;\n  align-self: flex-end;\n  font-size:small;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding-right:0.5rem;\n`;\n\nfunction Highlights() {\n  const [highlights, setHighlights] = React.useState([]);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:3333/events/featured\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          console.log(result);\n          setHighlights([...result]);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n\n  if (!isLoaded) return <Loading />;\n  //return <Events events={highlights} />\n  else\n    return (\n      <Box display={{ xs: 'none', sm: 'block' }}> \n        <header>Today's Highlights</header>\n        <hr />\n        {highlights.map((event) => (\n          <EventContainer key={event.id}>\n            <EventImage src={event.eventImage} alt={event.title} />\n            <Content>\n              <Title>{event.title}</Title>\n              <ShortDesc>{event.description.slice(0,50)+'...'}</ShortDesc>\n              <Location>{event.location}</Location>\n            </Content>\n          </EventContainer>\n        ))}\n      </Box>\n    );\n}\n\nexport default Highlights;\n","import React from \"react\";\nimport {  Link } from \"react-router-dom\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport styled from \"@emotion/styled\";\n\n\nimport Events from \"../Events\";\nimport HighLights from \"../Highlights\";\nimport EventContext from \"../EventContext\";\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  width: 100%;\n  height:calc(100vh - 65px);\n`;\n\nconst InnerContainer = styled.div`\n  width: 100%;\n  max-width: 1120px;\n  height:100%;\n`;\n\nconst LayoutBase = styled.div`\n  display: grid;\n  grid-template-columns: 70% 30%;\n  grid-column-gap: 1rem;\n`;\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      position:'fixed',\n      display:'flex',\n      flexDirection:'column',\n      alignSelf:'flex-end',\n      left: '80%',\n      top: '88%',\n      '& > *': {\n        margin: theme.spacing(1),\n\n      },\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    \n  }),\n);\n\n\n\n\nfunction Layout() {\n  const classes = useStyles();\n  const [error, setError] = React.useState(null);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [events, setEvents] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:3333/events\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setEvents([...result]);\n          console.log(result);\n        },\n        (error) => {\n          console.log(error);\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n    return (\n      <EventContext.Provider\n        value={{\n          error,\n          isLoaded,\n          events,\n          setEvents,\n          setError,\n          setIsLoaded\n        }}\n      >\n        <Container>\n          <InnerContainer>\n            <LayoutBase>\n              <Events/>\n              <HighLights />\n            </LayoutBase>\n          </InnerContainer>\n          <div className={classes.root}>\n          <Fab color=\"primary\" aria-label=\"add\" component={Link} to=\"/newEvent\"  >\n            <AddIcon />\n          </Fab>\n         \n          </div>\n        </Container>\n       \n      </EventContext.Provider>\n    );\n}\n\nexport default Layout;\n","import React from 'react';\n\n// import { Container } from './styles';\n\nfunction NewEvent() {\n  return <h1>\n          Create a New Event!\n         </h1>\n}\n\nexport default NewEvent;","import React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport Loading from '../Loading';\n\n\n\nfunction EventDetails() {\n  const [event,setEvent] = React.useState({});\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const  { id } = useParams();\n\n  const url =  `http://localhost:3333/events/${id}`;\n\n  React.useEffect(() => {\n    fetch(url)\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        setIsLoaded(true);\n        setEvent(result);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n}, [url]);\n  \n\n\nreturn isLoaded ? <h1>{event.title}</h1> : <Loading/>;\n}\n\nexport default EventDetails;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Layout from \"./components/Layout\";\nimport NewEvent from \"./components/NewEvent\";\nimport EventDetails from \"./components/EventDetails\";\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nfunction App() {\n  \n  \n\n  return (\n    <Router>\n      <div>\n        <Switch>\n            <Route path=\"/event/:id\"> \n              <Header />\n              <EventDetails />\n            </Route>\n            <Route path=\"/newEvent\">\n            <Header />\n            <NewEvent/>\n          </Route>\n          <Route path=\"/about\">\n            <Header />\n            <About />\n          </Route>\n          <Route path=\"/users\">\n            <Header />\n            <Users />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Layout />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}